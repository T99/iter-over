{"version":3,"sources":["../ts/string-character-iterator.ts"],"names":["abstract_iterator_1","require","StringCharacterIterator","AbstractIterator","[object Object]","content","super","this","index","length","substring","exports"],"mappings":"oEAMA,MAAAA,oBAAAC,QAAA,uBASA,MAAaC,gCAAgCF,oBAAAG,iBAM5CC,YAAmBC,GAElBC,QAEAC,KAAKF,QAAUA,EACfE,KAAKC,MAAQ,EAIPJ,UAEN,OAAQG,KAAKC,MAAQD,KAAKF,QAAQI,OAI5BL,OAEN,OAAOG,KAAKF,QAAQK,UAAUH,KAAKC,QAASD,KAAKC,OAI3CJ,UAMAA,QAENG,KAAKC,MAAQ,GAnCfG,QAAAT,wBAAAA","file":"string-character-iterator.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t6:16 PM -- May 18th, 2019.\n *\tProject: iter-over\n */\n\nimport { AbstractIterator } from \"./abstract-iterator\";\n\n/**\n * An AbstractIterator that iterates over the characters in a string.\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v1.0.0\n * @since v0.1.0\n */\nexport class StringCharacterIterator extends AbstractIterator<string> {\n\t\n\tprivate content: string;\n\t\n\tprivate index: number;\n\t\n\tpublic constructor(content: string) {\n\t\n\t\tsuper();\n\t\t\n\t\tthis.content = content;\n\t\tthis.index = 0;\n\t\n\t}\n\t\n\tpublic hasNext(): boolean {\n\t\t\n\t\treturn (this.index < this.content.length);\n\t\t\n\t}\n\t\n\tpublic next(): string {\n\t\t\n\t\treturn this.content.substring(this.index, ++this.index);\n\t\t\n\t}\n\t\n\tpublic remove(): string | undefined {\n\t\t\n\t\treturn undefined;\n\t\t\n\t}\n\t\n\tpublic reset(): void {\n\t\n\t\tthis.index = 0;\n\t\n\t}\n\t\n}"]}