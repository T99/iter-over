{"version":3,"sources":["ts/tests/empty-iterator.test.ts"],"names":["empty_iterator_1","require","iterator","beforeEach","EmptyIterator","test","expect","hasNext","toBeFalsy","next","toBeUndefined","remove","reset","not","toThrowError"],"mappings":"oEAMA,MAAAA,iBAAAC,QAAA,qBAUA,IAAIC,SAEJC,WAAW,KAEVD,SAAW,IAAIF,iBAAAI,gBAIhBC,KAAK,0BAA2B,KAE/BC,OAAOJ,SAASK,WAAWC,cAI5BH,KAAK,2BAA4B,KAEhCC,OAAOJ,SAASO,QAAQC,kBAIzBL,KAAK,6BAA8B,KAElCC,OAAOJ,SAASS,UAAUD,kBAI3BL,KAAK,sCAAuC,KAE3CC,OAAO,IAAMJ,SAASU,SAASC,IAAIC","file":"empty-iterator.test.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t2:13 PM -- July 21st, 2019.\n *\tWebsite: iter-over\n */\n\nimport { EmptyIterator } from \"../empty-iterator\";\n\n/**\n *\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\n\nlet iterator: EmptyIterator;\n\nbeforeEach(() => {\n\t\n\titerator = new EmptyIterator();\n\t\n});\n\ntest(\"#hasNext returns false.\", () => {\n\t\n\texpect(iterator.hasNext()).toBeFalsy();\n\t\n});\n\ntest(\"#next returns undefined.\", () => {\n\t\n\texpect(iterator.next()).toBeUndefined();\n\t\n});\n\ntest(\"#remove returns undefined.\", () => {\n\t\n\texpect(iterator.remove()).toBeUndefined();\n\t\n});\n\ntest(\"#reset runs without throwing error.\", () => {\n\t\n\texpect(() => iterator.reset()).not.toThrowError();\n\t\n});"]}